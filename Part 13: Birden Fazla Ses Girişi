13 – Çoklu Ses
Şimdiye kadar müzik üretme konusunda play, synth ve sample komutlarını kullandık. Bu komutlar stereo hoparlörlerimiz için ses üretti. Ama bazı bilgisayarların, mikrofonu olması sebebi ile dışarıdan da ses alıp kaydedebilme özelliği ve bununla beraber iki hoparlörden fazla ses çıkarabilme özelliği var. Bu kısımda dışarıdan alınan sesler ile neler yapabileceğimize bakacağız.
 
13.1 – Ses Girişi
Sesi, girebilmenin en kolay yollardan birisi olarak gene synth’i kullanacağoz. Bunu yaparken de yeni kodumuz lan ‘’:sound_in’’ kodumuzu kullanacağız.

synth :sound_in

Bu kod aynı daha önce girdiklerimize benzer şekilde işleyecek. ‘’synth: dsaw’’ gibi direk bir ses üretecektir. Eğer dizüstü bilgisayar kullanıyorsanız o zaman bunu bilgisayarınızın mikrafonu halledecektir. Ama harici bir ses kaydınız varsa, bilgisayarınıza takacağınız herhangi bir ses cihazı da işinizi görecektir. 
Süreyi Arttırmak
Belki farketmişsinizdir, aynı diğer synthler gibi bu kodumuz da 1 ‘’vuruşluk’’ çalışmıştır. Bu sesi uzatmak için aşağıdaki yolu izleyebilirsiniz. Örneğin kodunuzu 8 saniye uzatmak isterseniz aşağıdaki şekilde kodunuzu ayarlabilirsiniz.
synth :sound_in, sustain: 8
Efekt Eklemek
Tabi ki de diğer synthler gibi bu synthinize de kolayca efekt ekleyebilirsiniz. 
with_fx :reverb do
  with_fx :distortion do
    synth :sound_in, sustain: 8
  end
end

‘’:sound_in’’ kodunuzu istediğiniz kadar farklı çeşitlerde ve varyasyonlarda kullanabilirsiniz. Örneğin:

with_fx :distortion do
  synth :sound_in, sustain: 8
end

with_fx :reverb do
  synth :sound_in, sustain: 8
endCopy
Çoklu Giriş
Üzerinde oynama yapmak istediğiniz ses girişini ‘’input:’’ ile yapabilirsiniz. Stereo girişini de isterseniz ‘’:soun_in_stereo’’ ile özelleştirebilirsiniz. Örneğin eğer 3 farklı ses kartınız varsa bunlardan ikisine farklı iş diğerine farklı iş yaptırabilirsiniz. 

with_fx :distortion do
  synth :sound_in_stereo, sustain: 8, input: 1
end

with_fx :reverb do
  synth :sound_in, sustain: 8, input: 3
endCopy
Olası Sorunlar
Her ne kadar kullanması çok uygun bir teknik de olsa bu tekniğin de bazı sorunları bulunmakta. Birinci sorunu belli bir süreye kadar çalışabiliyor, ikinci sorunu ise synthleri girdikten sonra efekleri değiştirmek mümkün olmuyor. Ama bu sorunu SonicPi’in kendi çözümü  (‘’live_audio’’) ile nasıl hallettiğine bakacağız az sonra.
 
13.2 – Canlı Müzik
Her ne kadar ‘’:sound_in’’ güzel ve esnek bir olanak sunsa da tek ve devamlı bir müzik deneyimi için en iyi yönem ‘’live_audio’’. 

İsimli bir ses girişi
‘’live_audio’’ , ‘’live_loop’’ ile belli başlı birkaç mekaniği paylaşıyor.’’live_audio’’ aynı anda sadece bir ‘’live_audio’’ isimli girişi çalıştırabiliyor. 

live_audio :foo
Efektler ile çalışmak

with_fx :reverb do
  live_audio :foo
end

Verilen ‘’live_audio’’ sonsuza kadar çalıyor. Eğer klasik synthler gibi ‘’:reverb’’ kısmına bağlı olsaydı çok daha zorlu olacaktı. Ama bu bir sorun değil.Aşağıdaki kodu girerek sesin direk ses kartından doğrudan nasıl geldiğini dinle.Hala gelen sesi dinlerken şimdi kodu aşağıdaki gibi değiştir.

with_fx :echo do
  live_audio :foo
end

Şimdi kodu çalıştırarak sesin efekt kısmından gelmesi yerinde nasıl echodan geldiğine bak. Eğer ikisini de aynı anda duymak istiyorsan o zaman aşağıdaki kodu gir. 
with_fx :reverb do
  with_fx :echo do
    live_audio :foo
  end
end

It’s important to point out that you can call live_audio :foo from any thread or live loop and it will move the live audio synth to that thread’s current FX context. You could therefore easily have multiple live loops calling live_audio :foo at different times resulting in the FX context being automatically swapped around for some interesting results.
Canlı müziği durdurmak
Maalesef ‘’live_audio’’ diğer synthler gibi ‘’stop’’ butonu ile durmuyor. Durdurmak için ‘’stop’’ kodunu kullanmak gerekiyor. Aşağıda bir göz atalım

live_audio :foo, :stop

Tekrar devam ettirmek istersek, bunu basitçe ‘’stop’’ kodunu silerek yapabiliriz. 

live_audio :foo

Stereo Girişi
Normal ‘’live_audio’’, ‘’:sound_in’’ gibi işlem yaparak mono sesi alıp stereoya çeviriyor. Aynı zamanda ‘’live_audio’’ sesi iki farklı kanaldan okuyup sağ ve sol taraftan verebilme özelliğine de sahip. Buna’’:stereo’’ komutu ile ulaşabilirsiniz

live_audio :foo, stereo: true, input: 2

 
13.3 – Ses Çıkışı
Şimdiye kadar ses girişlerine ve sesi nasıl kullandığımıza baktık. SonicPi aynı zamanda birden fazla ses çıkışı sayesinde size farklı deneyimler de sunar. Buna ‘’:sound_out’’ ile ulaşabiliriz. 
Çıkış Örnekleri
Çok kısa bir şekilde SonicPi’in çıkış örneklerine aşağıdaki örneklerden bakabiliriz. 
with_fx :reverb do    # C
  with_fx :echo do    # B
    sample :bd_haus   # A
  end
end

Bunu en basit şekilde anlatmak gerekirse en içteki ses olan ‘’A’’ sesi çalmaya başlıyor. Ses otomatik olarak ondan sonra ‘’B’’ sesine geçiyor daha sonra da eko kısmı olan ‘’C’’ kısmına uğruyor. Bu da sese efekt eklereyerek sağdan ve soldan duyulmasını sağlıyor. 
Efekt ile ses çıkışı
Bu işlem ‘’live_audio’’ da dahil olmak üzere ‘’:sound_out’’ dışında tüm sesler için geçerlidir. ‘’sound_out’’ efekti iki şey yapıyor. Birincisi az önce gösterdiğimiz işlemi yapıyor. İkincisi ise direk bilgisayarınızın ses kartından çıkarıyor sesi. 

with_fx :reverb do      # C
  with_fx :sound_out, output: 3 do # B
    sample :bd_haus     # A
  end
end

Bu örnekte ‘’:bd_haus’’ sesi dışarıdan ‘’:sound_out’’ olarak veriyor.Bunun karşılığı olarakda efektler kendini ‘’:reverb’’ olarak dışarı veriyor. Aynı zamanda mono sesi karıştırıp sistemin ses dosyasından çıkarıyor. 
Tekli ve çoklu ses çıkışı
Gördüğümüz üzere ‘’:sound_out’’ stereo girişten mono ses çıkarıyor eğer istediğiniz bu değilse bunu değiştirmenin birkaç yolu var. İlk olarak ‘’mode:’’ kodu ile sesin hangi yönden geleceğine karar verebilirsiniz. Ya da sadece ‘’:sound_out_stereo’’ yaparak sesin, ses kartınızdan çıkmasını sağlayabilirsiniz. 
Direk çıkış
Gördüğümüz üzere hem ‘’:sound_out’’ hem de ‘’:sound_out_stereo’’ sesi bilgisayarınızın ses kartından çıkartabiliyor. Eğer sadece sesin bilgisayarınızın ses kartına gitmesini isteyip, dış ses olarak gelmesini istemiyorsanız, bunu standart ‘’amp:’’ ile yapabilirsiniz. 

with_fx :sound_out, output: 3, amp: 0 do # B
  sample :loop_amen                      # A
end

Yukarıdaki örnekte ‘’:loop_amen’’ kodu dış ses olarak ‘’:sound_out’’a gönderiliyor. Daha sonra bu ses mono olarak ses kartına 3 olarak gönderilip orada 0 ile çarpılarak kapatılıyor. Bu kodun 0’lanması ‘’:sound_out’’ olarak klasik çıkışa gönderiliyor. Bu sayede bu kodu mono ses olarak algılayabiliyor.
 
